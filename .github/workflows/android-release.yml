name: Android Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            pkg-config \
            libssl-dev \
            autoconf \
            libtool \
            curl \
            unzip

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Restore gRPC build cache
        uses: actions/cache/restore@v4
        id: cache-grpc-build-restore
        with:
          path: |
            opencv/outputs/arm64-v8a
            opencv/outputs/armeabi-v7a
          key: ${{ runner.os }}-grpc-build-${{ hashFiles('opencv/grpc/**') }}

      - name: Restore Host Tools Cache
        uses: actions/cache/restore@v4
        id: cache-host-tools-restore
        with:
          path: opencv/tools
          key: ${{ runner.os }}-host-tools-${{ hashFiles('opencv/build_host_tools.sh') }}

      - name: Create keystore file
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 -d > app/release.keystore.jks

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Release APK
        run: |
          ./gradlew assembleRelease
        env:
          RELEASE_STORE_FILE: release.keystore.jks
          RELEASE_STORE_PASSWORD: ${{ secrets.RELEASE_STORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

      - name: Save gRPC build cache
        uses: actions/cache/save@v4
        if: steps.cache-grpc-build-restore.outputs.cache-hit != 'true'
        with:
          path: |
            opencv/outputs/arm64-v8a
            opencv/outputs/armeabi-v7a
          key: ${{ runner.os }}-grpc-build-${{ hashFiles('opencv/grpc/**') }}

      - name: Save Host Tools Cache
        uses: actions/cache/save@v4
        if: steps.cache-host-tools-restore.outputs.cache-hit != 'true'
        with:
          path: opencv/tools
          key: ${{ runner.os }}-host-tools-${{ hashFiles('opencv/build_host_tools.sh') }}

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: app/build/outputs/apk/release/app-release.apk
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: Release version ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}